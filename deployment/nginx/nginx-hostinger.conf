user nginx;
worker_processes auto;
error_log /var/log/nginx/error.log warn;
pid /var/run/nginx.pid;

events {
    worker_connections 1024;
    use epoll;
    multi_accept on;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    # Configuración de logs
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';

    access_log /var/log/nginx/access.log main;

    # Configuraciones optimizadas para Hostinger VPS
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    server_tokens off;

    # Compresión
    gzip on;
    gzip_vary on;
    gzip_min_length 10240;
    gzip_proxied expired no-cache no-store private must-revalidate no_last_modified no_etag auth;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/x-javascript
        application/xml+rss
        application/javascript
        application/json;

    # Rate limiting para Hostinger
    limit_req_zone $binary_remote_addr zone=login:10m rate=10r/m;
    limit_req_zone $binary_remote_addr zone=api:10m rate=100r/m;

    # Upstream para el dashboard
    upstream dashboard_backend {
        server dashboard:8501;
        keepalive 32;
    }

    # Configuración HTTP (puerto 8080 para evitar conflictos en Hostinger)
    server {
        listen 80;
        server_name tu-dominio.com www.tu-dominio.com;
        
        # Health check de nginx
        location /health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }

        # Let's Encrypt validation
        location /.well-known/acme-challenge/ {
            root /var/www/certbot;
        }
        
        # Redirigir a HTTPS
        location / {
            return 301 https://$server_name$request_uri;
        }
    }

    # Configuración HTTPS (puerto 8443 para evitar conflictos en Hostinger)
    server {
        listen 443 ssl http2;
        server_name tu-dominio.com www.tu-dominio.com;

        # Configuración SSL
        ssl_certificate /etc/nginx/ssl/cert.pem;
        ssl_certificate_key /etc/nginx/ssl/key.pem;
        
        # SSL moderno y seguro
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384;
        ssl_prefer_server_ciphers off;
        ssl_session_cache shared:SSL:10m;
        ssl_session_timeout 10m;

        # HSTS
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;

        # Headers de seguridad
        add_header X-Frame-Options DENY always;
        add_header X-Content-Type-Options nosniff always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header Referrer-Policy "strict-origin-when-cross-origin" always;
        add_header Content-Security-Policy "default-src 'self' 'unsafe-inline' 'unsafe-eval' data: blob: https:; img-src 'self' data: https:; font-src 'self' data: https:;" always;

        # Configuración principal para Streamlit
        location / {
            # Rate limiting para OAuth
            location /callback {
                limit_req zone=login burst=5 nodelay;
                proxy_pass http://dashboard_backend;
                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header X-Forwarded-Proto $scheme;
            }

            proxy_pass http://dashboard_backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Forwarded-Host $server_name;
            
            # WebSocket para Streamlit
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            
            # Timeouts optimizados para Hostinger
            proxy_connect_timeout 60s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;
            proxy_buffering off;
            
            # Cache para recursos estáticos
            location ~* \.(css|js|png|jpg|jpeg|gif|ico|svg)$ {
                expires 1y;
                add_header Cache-Control "public, immutable";
                proxy_pass http://dashboard_backend;
            }
        }

        # Health check de la aplicación
        location /app-health {
            access_log off;
            proxy_pass http://dashboard_backend/_stcore/health;
            proxy_set_header Host $host;
        }

        # Información del servidor (útil para debugging)
        location /server-info {
            access_log off;
            return 200 "Dashboard Hostinger - Running";
            add_header Content-Type text/plain;
        }

        # Bloquear archivos sensibles
        location ~ /\. {
            deny all;
            access_log off;
            log_not_found off;
        }

        location ~ \.(env|ini|conf|log)$ {
            deny all;
            access_log off;
            log_not_found off;
        }
    }

    # Servidor para debugging local (solo accesible internamente)
    server {
        listen 8080;
        server_name localhost;
        
        location / {
            proxy_pass http://dashboard_backend;
            proxy_set_header Host $host;
        }
        
        location /status {
            return 200 "Dashboard OK - Hostinger VPS";
            add_header Content-Type text/plain;
        }
    }
}
